{"is_source_file": true, "format": "TypeScript", "description": "This file defines a reusable game state composable for a tic-tac-toe game, including move validation, game status updates, simple AI logic, and mode management in a reactive framework.", "external_files": ["~/types/game"], "external_methods": ["useState"], "published": ["useGame"], "classes": [], "methods": [{"name": "export function useGame() { useGame", "description": "Main function that provides reactive game state, move logic, status updates, reset, and mode toggle functionalities.", "scope": "", "scopeKind": ""}, {"name": "validateMove", "description": "Validates whether a move is legal based on game status, index bounds, and cell occupancy."}, {"name": "updateStatusAfterMove", "description": "Checks all winning lines to determine if the game has been won or drawn, updating status and winning line accordingly."}, {"name": "togglePlayer", "description": "Switches the current player between 'X' and 'O'."}, {"name": "aiChooseMove", "description": "Implements a simple heuristic AI that tries to win, block, take center/corners, or first available cell."}, {"name": "makeMove", "description": "Performs a move for the current player, handles AI response if mode is PVAI, validates, updates state, and returns previous player."}, {"name": "reset", "description": "Resets the game state to initial values."}, {"name": "setMode", "description": "Sets the game mode to either 'PVP' or 'PVAI' and resets the game board."}], "calls": ["validateMove", "updateStatusAfterMove", "togglePlayer", "aiChooseMove", "setMode"], "search-terms": ["useGame", "reactive game state", "tic-tac-toe logic", "win detection", "simple AI", "mode toggle", "composable"], "state": 2, "file_id": 8, "knowledge_revision": 17, "git_revision": "", "ctags": [{"_type": "tag", "name": "LINES", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^const LINES: number[][] = [$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "_result", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^          const _result = updateStatusAfterMove()$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "a", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^        const cells = [board.value[a], board.value[b], board.value[c]]$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "a", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^      const [a, b, c] = line$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "a", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^      const va = board.value[a]$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "a", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^      for (const [a, b, c] of LINES) {$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "aiIdx", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^        const aiIdx = aiChooseMove('O')$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "b", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^        const cells = [board.value[a], board.value[b], board.value[c]]$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "b", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^      const [a, b, c] = line$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "b", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^      for (const [a, b, c] of LINES) {$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "blockIdx", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^    const blockIdx = findWinningMove(opp)$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "board", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^        const cells = [board.value[a], board.value[b], board.value[c]]$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "board", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^  const board = useState<CellValue[]>('board', () => Array<CellValue>(9).fill(null))$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "c", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^        const cells = [board.value[a], board.value[b], board.value[c]]$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "c", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^      const [a, b, c] = line$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "c", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^      for (const [a, b, c] of LINES) {$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "cells", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^        const cells = [board.value[a], board.value[b], board.value[c]]$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "corners", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^    const corners = [0, 2, 6, 8].filter(i => board.value[i] === null)$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "countEmpty", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^        const countEmpty = cells.filter(v => v === null).length$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "countP", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^        const countP = cells.filter(v => v === p).length$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "currentPlayer", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^  const currentPlayer = useState<Player>('currentPlayer', () => 'X')$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "free", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^    const free = board.value.findIndex(v => v === null)$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "line", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^    for (const line of LINES) {$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "mode", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^  const mode = useState<GameMode>('mode', () => 'PVP')$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "opp", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^    const opp: Player = ai === 'X' ? 'O' : 'X'$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "prev", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^    const prev = currentPlayer.value$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "result", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^    const result = updateStatusAfterMove()$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "useGame", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^export function useGame() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "va", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^      const va = board.value[a]$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}, {"_type": "tag", "name": "winIdx", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-digital-platform-210387-210396/tictactoe_frontend/composables/useGame.ts", "pattern": "/^    const winIdx = findWinningMove(ai)$/", "language": "TypeScript", "kind": "constant", "scope": "useGame", "scopeKind": "function"}], "hash": "6807477bc2d5fe3cb1c360d57516d411", "format-version": 4, "code-base-name": "tictactoe_frontend", "filename": "tictactoe_frontend/composables/useGame.ts", "revision_history": [{"17": ""}]}